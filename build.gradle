plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id "com.vanniktech.maven.publish" version "0.28.0"
    id 'com.gradleup.nmcp' version '0.0.7'
}

ext {
    nexusUrl = System.getenv('NEXUS_URL')
    snapshotsRepository = "$nexusUrl/maven-snapshots/"
    releasesRepository = "$nexusUrl/maven-releases/"

    // Change the publish repository as needed
    publishRepository = releasesRepository
}

group = 'com.wildetechsolutions'
version = '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.slf4j', name: 'slf4j-api', version: slf4j

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

tasks.register('sourcesJar', Jar) {
    from sourceSets.main.allJava
    archiveClassifier.set('sources')
}

tasks.register('javadocJar', Jar) {
    from javadoc
    archiveClassifier.set('javadoc')
}

ext {
    nexusUrl = System.getenv('NEXUS_URL')
    snapshotsRepository = "$nexusUrl/maven-snapshots/"
    releasesRepository = "$nexusUrl/maven-releases/"

    // Change the publish repository as needed
    publishRepository = releasesRepository
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'reflection-utils'
            pom {
                name = 'reflection-utils'
                description = 'A simple library for accessing sub fields and sub field types'
                url = 'https://github.com/WildeTechSolutions/Reflection-Utils'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'WildeTechSolutions'
                        name = 'Thomas Wilde'
                        email = 'thomas.wilde@wildetechsolutions.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/WildeTechSolutions/Reflection-Utils'
                    developerConnection = 'scm:git:ssh://github.com:WildeTechSolutions/Reflection-Utils.git'
                    url = 'https://github.com/WildeTechSolutions/Reflection-Utils'
                }
            }
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
    repositories {
        maven {
            url publishRepository
            credentials {
                username = System.getenv('NEXUS_USER')
                password = System.getenv('NEXUS_PASSWORD')
            }
        }
        maven {
            url file('C:/Users/Thomas/SoftwareProjects/LocalMaven')
        }
    }
}

nmcp {
    publishAllProjectsProbablyBreakingProjectIsolation  {
        username = findProperty('sonatypeUsername') as String
        password = findProperty('sonatypePassword') as String
        publicationType = 'USER_MANAGED'
    }
}

